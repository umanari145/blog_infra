# API Gatewayの作成
resource "aws_api_gateway_rest_api" "{{api_name}}" {
  name        = "{{api_name}}"
  description = "{{description}}"
}

{% for resource in resources.values() %}
resource "aws_api_gateway_resource" "res_{{ resource.id }}" {
  rest_api_id = aws_api_gateway_rest_api.{{api_name}}.id
  {%- if resource.parent_id %}
  parent_id   = aws_api_gateway_resource.res_{{resource.parent_id}}.id
  {%- else %}
  parent_id   = aws_api_gateway_rest_api.{{api_name}}.root_resource_id
  {%- endif %}
  path_part   = "{{ resource.path }}"
}
{% endfor %}

{% for method in methods %}
resource "aws_api_gateway_method" "method_{{ method.id }}" {
  rest_api_id   = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id   = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method   = "{{ method.method | upper }}"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "method_{{ method.id }}_integration" {
  rest_api_id             = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id             = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method             = aws_api_gateway_method.method_{{ method.id }}.http_method
  type                    = "AWS_PROXY"
  integration_http_method = "POST"
  uri                     = aws_lambda_function.{{ method.lambda }}.invoke_arn
}

resource "aws_api_gateway_method_response" "method_{{ method.id }}_response" {
  rest_api_id = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method = aws_api_gateway_method.method_{{ method.id }}.http_method
  status_code = "200"

  response_parameters = {
    "method.response.header.Access-Control-Allow-Origin" = true
  }

  response_models = {
    "application/json" = "Empty"
  }
}


resource "aws_api_gateway_integration_response" "method_{{ method.id }}_integration_response" {
  rest_api_id = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method = aws_api_gateway_method.method_{{ method.id }}.http_method
  status_code = "200"

 response_parameters = {
    "method.response.header.Access-Control-Allow-Origin" = "'*'"
  }

  response_templates = {
    "application/json" = ""
  }

  depends_on = [
    aws_api_gateway_resource.res_{{ method.resource_id }},
    aws_api_gateway_method.method_{{ method.id }},
    aws_api_gateway_method_response.method_{{ method.id }}_response,
    aws_api_gateway_integration.method_{{ method.id }}_integration
  ]
}

{%- if method.method == 'post' or method.method == 'put' %}
resource "aws_api_gateway_method" "options_method_{{ method.id }}" {
  rest_api_id   = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id   = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method   = "OPTIONS"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "options_method_{{ method.id }}_integration" {
  rest_api_id = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method = aws_api_gateway_method.options_method_{{ method.id }}.http_method
  type        = "MOCK"

  request_templates = {
    "application/json" = <<EOF
{
  "statusCode": 200
}
EOF
  }
}

resource "aws_api_gateway_method_response" "option_method_{{ method.id }}_response" {
  rest_api_id = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method = aws_api_gateway_method.options_method_{{ method.id }}.http_method
  status_code = "200"

  response_parameters = {
    "method.response.header.Access-Control-Allow-Origin"  = true
    "method.response.header.Access-Control-Allow-Methods" = true
    "method.response.header.Access-Control-Allow-Headers" = true
  }
}

resource "aws_api_gateway_integration_response" "options_method_{{ method.id }}_integration_response" {
  rest_api_id = aws_api_gateway_rest_api.{{api_name}}.id
  resource_id = aws_api_gateway_resource.res_{{ method.resource_id }}.id
  http_method = aws_api_gateway_method.options_method_{{ method.id }}.http_method
  status_code = aws_api_gateway_method_response.option_method_{{ method.id }}_response.status_code

  response_parameters = {
    "method.response.header.Access-Control-Allow-Origin"  = "'*'"
    "method.response.header.Access-Control-Allow-Methods" = "'OPTIONS,{{ method.method | upper }}'"
    "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,Authorization'"
  }

  depends_on = [
    aws_api_gateway_resource.res_{{ method.resource_id }},
    aws_api_gateway_method.options_method_{{ method.id }},
    aws_api_gateway_method_response.option_method_{{ method.id }}_response,
    aws_api_gateway_integration.options_method_{{ method.id }}_integration
  ]
}

{%- endif %}


{% endfor %}

resource "aws_api_gateway_deployment" "deployment" {
  depends_on  = [aws_api_gateway_rest_api.{{api_name}}]
  rest_api_id = aws_api_gateway_rest_api.{{api_name}}.id
  stage_name  = "prod"

  triggers = {
    redeployment = "v0.1"
  }

  lifecycle {
    create_before_destroy = true
  }
}